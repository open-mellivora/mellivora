// Code generated by MockGen. DO NOT EDIT.
// Source: core/spider.go

// Package core is a generated GoMock package.
package core

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	core "icode.baidu.com/baidu/goodcoder/wangyufeng04/core"
)

// MockSpider is a mock of Spider interface.
type MockSpider struct {
	ctrl     *gomock.Controller
	recorder *MockSpiderMockRecorder
}

// MockSpiderMockRecorder is the mock recorder for MockSpider.
type MockSpiderMockRecorder struct {
	mock *MockSpider
}

// NewMockSpider creates a new mock instance.
func NewMockSpider(ctrl *gomock.Controller) *MockSpider {
	mock := &MockSpider{ctrl: ctrl}
	mock.recorder = &MockSpiderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSpider) EXPECT() *MockSpiderMockRecorder {
	return m.recorder
}

// StartRequests mocks base method.
func (m *MockSpider) StartRequests(c *core.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartRequests", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// StartRequests indicates an expected call of StartRequests.
func (mr *MockSpiderMockRecorder) StartRequests(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartRequests", reflect.TypeOf((*MockSpider)(nil).StartRequests), c)
}
